{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","value","setValue","list","setList","className","src","onSubmit","e","preventDefault","prev","required","onChange","target","type","map","item","idx","onClick","newList","filter","index","removeItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAyDeA,MAvDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,KAmBb,OACE,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,UAAf,UACE,qBAAKC,IAAI,oEAET,+CAGF,qBAAKD,UAAU,iBAAf,SACE,uBAAME,SAhBU,SAACC,GACrBA,EAAEC,iBAEFL,GAAQ,SAACM,GAAD,4BAAcA,GAAd,CAAoBT,OAC5BC,EAAS,KAYL,UACE,uBACED,MAAOA,EAEPU,UAAQ,EACRC,SAAU,SAACJ,GAAD,OAAON,EAASM,EAAEK,OAAOZ,UAErC,qBAAKI,UAAU,SAAf,SACE,wBAAQS,KAAK,SAAb,SACD,gDAGAX,EAAKY,KAAI,SAACC,EAAMC,GACf,OACE,8BACE,oBAAGC,QAAS,kBAvCP,SAACD,GAElB,IAAME,EAAUhB,EAAKiB,QAAO,SAACJ,EAAMK,GAAP,OAAiBA,IAAUJ,KAEvDb,GAAQ,kBAAMe,KAmCgBG,CAAWL,IAA7B,kBACQA,EAAM,EADd,KACmBD,MAFXC,eChCTM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2e8da147.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [value, setValue] = useState(\"\");\n  const [list, setList] = useState([]);\n\n  const removeItem = (idx) => {\n\n    const newList = list.filter((item, index) => index !== idx);\n\n    setList(() => newList)\n\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    setList((prev) => [...prev, value]);\n    setValue(\"\");\n  };\n\n  return (\n    <div className='container'>\n      <div className='heading'>\n        <img src='https://s3-us-west-2.amazonaws.com/s.cdpn.io/756881/laptop.svg '></img>\n\n        <h1>To-Do-List</h1>\n      </div>\n\n      <div className='form-container'>\n        <form onSubmit={submitHandler}>\n          <input\n            value={value}\n  \n            required\n            onChange={(e) => setValue(e.target.value)}\n          />\n          <div className='button'>\n            <button type='submit'>\n           <span>Add Task</span>\n            </button>\n          </div>\n          {list.map((item, idx) => {\n            return (\n              <div key={idx}>\n                <p onClick={() => removeItem(idx)}>\n                  task {idx + 1} :{item}\n                </p>\n              </div>\n            );\n          })}\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}